# This workflow runs whenever a PR is opened or updated, or a commit is pushed to main. It runs
# several checks:
# - fmt: checks that the code is formatted according to rustfmt
# - clippy: checks that the code does not contain any clippy warnings
# - ruff checks
# - ruff checks

name: check

# This configuration allows maintainers of this repo to create a branch and pull request based on
# the new branch. Restricting the push trigger to the main branch ensures that the PR only gets
# built once.
on:
  push:
    branches: [ main ]
  pull_request:

# If new code is pushed to a PR branch, then cancel in progress workflows for that PR. Ensures that
# we don't waste CI time, and returns results quicker https://github.com/jonhoo/rust-ci-conf/pull/5
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  fmt:
    runs-on: ubuntu-latest
    name: rust fmt
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.2"
          enable-cache: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo fmt --check
  clippy:
    runs-on: ubuntu-latest
    name: rust clippy
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.2"
          enable-cache: true
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - run: cargo clippy -- -D warnings
  ruff:
    runs-on: ubuntu-latest
    name: python checks
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.2"
          enable-cache: true
      - name: Install just
        uses: taiki-e/install-action@just
      - name: Install Python dependencies
        run: uv sync --all-extras --dev
        shell: bash
      - name: Run ruff format
        run: uv run ruff format --check .
      - name: Run ruff lint
        run: uv run ruff check --output-format=github .
      - name: Mypy type check
        run: uv run mypy .
